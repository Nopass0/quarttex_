#!/usr/bin/env bun

// –¢–µ—Å—Ç–æ–≤—ã–π —Å–∫—Ä–∏–ø—Ç –¥–ª—è –ø—Ä–æ–≤–µ—Ä–∫–∏ –∏—Å–ø—Ä–∞–≤–ª–µ–Ω–∏–π –æ—Ç–ø—Ä–∞–≤–∫–∏ –∫–æ–ª–±—ç–∫–æ–≤

const API_URL = 'http://localhost:3000/api';
const ADMIN_KEY = '3d3b2e3efa297cae2bc6b19f3f8448ed2b2c7fd43af823a2a3a0585edfbb67d1';

async function testAdminCallback() {
  console.log('üîç –¢–µ—Å—Ç–∏—Ä—É–µ–º –æ—Ç–ø—Ä–∞–≤–∫—É –∫–æ–ª–±—ç–∫–∞ –∏–∑ –∞–¥–º–∏–Ω–∫–∏...\n');
  
  // –°–Ω–∞—á–∞–ª–∞ –ø–æ–ª—É—á–∏–º –ø–µ—Ä–≤—É—é —Ç—Ä–∞–Ω–∑–∞–∫—Ü–∏—é —Å callbackUri
  const listResponse = await fetch(`${API_URL}/admin/transactions/list?limit=10`, {
    headers: {
      'x-admin-key': ADMIN_KEY
    }
  });
  
  const listData = await listResponse.json();
  const transactionWithCallback = listData.data?.find((t: any) => 
    t.callbackUri && t.callbackUri !== 'none' && t.callbackUri !== ''
  );
  
  if (!transactionWithCallback) {
    console.log('‚ùå –ù–µ –Ω–∞–π–¥–µ–Ω–æ —Ç—Ä–∞–Ω–∑–∞–∫—Ü–∏–π —Å callbackUri');
    return;
  }
  
  console.log(`üìã –ò—Å–ø–æ–ª—å–∑—É–µ–º —Ç—Ä–∞–Ω–∑–∞–∫—Ü–∏—é: ${transactionWithCallback.id}`);
  console.log(`   –°—É–º–º–∞: ${transactionWithCallback.amount}`);
  console.log(`   Callback URL: ${transactionWithCallback.callbackUri}\n`);
  
  // –û—Ç–ø—Ä–∞–≤–ª—è–µ–º —Å—Ç–∞–Ω–¥–∞—Ä—Ç–Ω—ã–π –∫–æ–ª–±—ç–∫
  console.log('üì§ –û—Ç–ø—Ä–∞–≤–ª—è–µ–º —Å—Ç–∞–Ω–¥–∞—Ä—Ç–Ω—ã–π –∫–æ–ª–±—ç–∫...');
  const callbackResponse = await fetch(
    `${API_URL}/admin/transactions/${transactionWithCallback.id}/callback`,
    {
      method: 'POST',
      headers: {
        'x-admin-key': ADMIN_KEY,
        'Content-Type': 'application/json'
      },
      body: JSON.stringify({
        type: 'standard',
        status: 'TEST_STATUS'
      })
    }
  );
  
  const callbackResult = await callbackResponse.json();
  
  console.log('\nüì® –†–µ–∑—É–ª—å—Ç–∞—Ç –æ—Ç–ø—Ä–∞–≤–∫–∏ –∫–æ–ª–±—ç–∫–∞:');
  console.log('   URL:', callbackResult.url);
  console.log('   Payload:', JSON.stringify(callbackResult.payload, null, 2));
  
  // –ü—Ä–æ–≤–µ—Ä—è–µ–º –Ω–∞–ª–∏—á–∏–µ –ø–æ–ª—è amount
  if (callbackResult.payload?.amount !== undefined) {
    console.log('   ‚úÖ –ü–æ–ª–µ amount –ø—Ä–∏—Å—É—Ç—Å—Ç–≤—É–µ—Ç:', callbackResult.payload.amount);
  } else {
    console.log('   ‚ùå –ü–æ–ª–µ amount –æ—Ç—Å—É—Ç—Å—Ç–≤—É–µ—Ç!');
  }
  
  // –ü—Ä–æ–≤–µ—Ä—è–µ–º —Å–æ—Ö—Ä–∞–Ω–µ–Ω–∏–µ –≤ –∏—Å—Ç–æ—Ä–∏—é
  if (callbackResult.callbackHistoryEntry) {
    console.log('\n‚úÖ –ö–æ–ª–±—ç–∫ —Å–æ—Ö—Ä–∞–Ω–µ–Ω –≤ –∏—Å—Ç–æ—Ä–∏—é:');
    console.log('   ID –∑–∞–ø–∏—Å–∏:', callbackResult.callbackHistoryEntry.id);
    console.log('   –°–æ–∑–¥–∞–Ω:', callbackResult.callbackHistoryEntry.createdAt);
  } else {
    console.log('\n‚ùå –ö–æ–ª–±—ç–∫ –Ω–µ —Å–æ—Ö—Ä–∞–Ω–µ–Ω –≤ –∏—Å—Ç–æ—Ä–∏—é');
  }
  
  // –ü—Ä–æ–≤–µ—Ä—è–µ–º –∏—Å—Ç–æ—Ä–∏—é –∫–æ–ª–±—ç–∫–æ–≤
  console.log('\nüìú –ü—Ä–æ–≤–µ—Ä—è–µ–º –∏—Å—Ç–æ—Ä–∏—é –∫–æ–ª–±—ç–∫–æ–≤...');
  const historyResponse = await fetch(
    `${API_URL}/admin/transactions/${transactionWithCallback.id}/callbacks`,
    {
      headers: {
        'x-admin-key': ADMIN_KEY
      }
    }
  );
  
  const historyData = await historyResponse.json();
  const recentCallbacks = historyData.callbackHistory?.slice(0, 3) || [];
  
  console.log(`   –ù–∞–π–¥–µ–Ω–æ –∑–∞–ø–∏—Å–µ–π –≤ –∏—Å—Ç–æ—Ä–∏–∏: ${historyData.callbackHistory?.length || 0}`);
  
  if (recentCallbacks.length > 0) {
    console.log('\n   –ü–æ—Å–ª–µ–¥–Ω–∏–µ –∫–æ–ª–±—ç–∫–∏:');
    recentCallbacks.forEach((cb: any, index: number) => {
      console.log(`   ${index + 1}. ${cb.createdAt}`);
      console.log(`      URL: ${cb.url}`);
      console.log(`      Status: ${cb.statusCode || 'N/A'}`);
      console.log(`      Payload amount: ${cb.payload?.amount || '–æ—Ç—Å—É—Ç—Å—Ç–≤—É–µ—Ç'}`);
    });
  }
}

// –ó–∞–ø—É—Å–∫–∞–µ–º —Ç–µ—Å—Ç
testAdminCallback().catch(console.error);