import { db } from "./src/db"

async function main() {
  try {
    console.log("üîç –ü—Ä–æ–≤–µ—Ä—è–µ–º –¥–µ—Ç–∞–ª–∏ —Ç—Ä–∞–Ω–∑–∞–∫—Ü–∏–∏ –∏ —Ä–µ–∫–≤–∏–∑–∏—Ç–∞...")
    
    // –ù–∞–π–¥–µ–º —Ç—Ä–∞–Ω–∑–∞–∫—Ü–∏—é
    const transaction = await db.transaction.findFirst({
      where: {
        amount: 1234,
        type: 'IN',
        status: 'IN_PROGRESS'
      },
      include: {
        requisites: {
          include: {
            device: true
          }
        }
      },
      orderBy: {
        createdAt: 'desc'
      }
    })
    
    if (!transaction) {
      console.log("‚ùå –¢—Ä–∞–Ω–∑–∞–∫—Ü–∏—è –Ω–µ –Ω–∞–π–¥–µ–Ω–∞")
      return
    }
    
    console.log("\nüí∞ –¢—Ä–∞–Ω–∑–∞–∫—Ü–∏—è:")
    console.log(`   ID: ${transaction.id}`)
    console.log(`   –°—É–º–º–∞: ${transaction.amount}`)
    console.log(`   –°—Ç–∞—Ç—É—Å: ${transaction.status}`)
    console.log(`   bankDetailId: ${transaction.bankDetailId || '–ù–ï–¢'}`)
    console.log(`   traderId: ${transaction.traderId}`)
    console.log(`   –°–æ–∑–¥–∞–Ω–∞: ${transaction.createdAt}`)
    
    if (transaction.requisites) {
      console.log("\nüí≥ –†–µ–∫–≤–∏–∑–∏—Ç:")
      console.log(`   ID: ${transaction.requisites.id}`)
      console.log(`   –ù–æ–º–µ—Ä –∫–∞—Ä—Ç—ã/—Ç–µ–ª–µ—Ñ–æ–Ω–∞: ${transaction.requisites.cardNumber}`)
      console.log(`   –ë–∞–Ω–∫: ${transaction.requisites.bankType}`)
      console.log(`   deviceId: ${transaction.requisites.deviceId || '–ù–ï–¢'}`)
      console.log(`   –ü—Ä–∏–≤—è–∑–∞–Ω–æ —É—Å—Ç—Ä–æ–π—Å—Ç–≤–æ: ${transaction.requisites.device ? '–î–ê' : '–ù–ï–¢'}`)
      
      if (transaction.requisites.device) {
        console.log("\nüì± –£—Å—Ç—Ä–æ–π—Å—Ç–≤–æ:")
        console.log(`   - ID: ${transaction.requisites.device.id}`)
        console.log(`   - –ò–º—è: ${transaction.requisites.device.name}`)
      }
    }
    
    // –ù–∞–π–¥–µ–º —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–µ
    const notification = await db.notification.findFirst({
      where: {
        message: {
          contains: "–ü–æ—Å—Ç—É–ø–ª–µ–Ω–∏–µ 1234"
        }
      },
      include: {
        Device: {
          include: {
            bankDetails: true
          }
        }
      },
      orderBy: {
        createdAt: 'desc'
      }
    })
    
    if (notification) {
      console.log("\nüì± –£–≤–µ–¥–æ–º–ª–µ–Ω–∏–µ:")
      console.log(`   deviceId: ${notification.deviceId}`)
      console.log(`   userId —É—Å—Ç—Ä–æ–π—Å—Ç–≤–∞: ${notification.Device?.userId}`)
      
      console.log("\nüè¶ –†–µ–∫–≤–∏–∑–∏—Ç—ã —É—Å—Ç—Ä–æ–π—Å—Ç–≤–∞:")
      if (notification.Device?.bankDetails) {
        notification.Device.bankDetails.forEach(bd => {
          console.log(`   - ID: ${bd.id}`)
          console.log(`     –ë–∞–Ω–∫: ${bd.bankType}`)
          console.log(`     –ö–∞—Ä—Ç–∞: ${bd.cardNumber}`)
          console.log(`     deviceId: ${bd.deviceId}`)
        })
      }
    }
    
    // –ü—Ä–æ–≤–µ—Ä–∏–º, –µ—Å—Ç—å –ª–∏ —Å–æ–æ—Ç–≤–µ—Ç—Å—Ç–≤–∏–µ
    if (transaction.requisites && notification?.Device?.bankDetails) {
      const matchingBankDetail = notification.Device.bankDetails.find(
        bd => bd.id === transaction.requisites?.id
      )
      
      if (matchingBankDetail) {
        console.log("\n‚úÖ –ù–∞–π–¥–µ–Ω–æ —Å–æ–æ—Ç–≤–µ—Ç—Å—Ç–≤–∏–µ —Ä–µ–∫–≤–∏–∑–∏—Ç–∞!")
      } else {
        console.log("\n‚ùå –†–µ–∫–≤–∏–∑–∏—Ç —Ç—Ä–∞–Ω–∑–∞–∫—Ü–∏–∏ –Ω–µ –Ω–∞–π–¥–µ–Ω —Å—Ä–µ–¥–∏ —Ä–µ–∫–≤–∏–∑–∏—Ç–æ–≤ —É—Å—Ç—Ä–æ–π—Å—Ç–≤–∞")
        
        // –ü—Ä–æ–≤–µ—Ä–∏–º —á–µ—Ä–µ–∑ bankDetailId
        const hasBankDetailId = notification.Device.bankDetails.some(
          bd => bd.id === transaction.bankDetailId
        )
        
        if (hasBankDetailId) {
          console.log("   –ù–æ bankDetailId —Ç—Ä–∞–Ω–∑–∞–∫—Ü–∏–∏ —Å–æ–≤–ø–∞–¥–∞–µ—Ç —Å –æ–¥–Ω–∏–º –∏–∑ —Ä–µ–∫–≤–∏–∑–∏—Ç–æ–≤ —É—Å—Ç—Ä–æ–π—Å—Ç–≤–∞")
        }
      }
    }
    
  } catch (error) {
    console.error("‚ùå –û—à–∏–±–∫–∞:", error)
  }
}

main()